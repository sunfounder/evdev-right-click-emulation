#!/usr/bin/env python3
import os, sys
import time
import pwd
import grp
import platform

username = os.getlogin()
gid = pwd.getpwnam(username).pw_gid
group_name = grp.getgrgid(gid)[0]
struct = platform.architecture()[0]

user_home = os.popen(f'getent passwd {username} | cut -d: -f 6').readline().strip()

AUTOSTART_DIR = "/etc/xdg/autostart/"

avaiable_options = ['-h', '--help', '--no-reboot']
errors = []

install_path = os.getcwd()

usage = '''
Usage:
    sudo ./install [option]

Options:
               --no-reboot  Do not ask for reboot
    -h         --help       Show this help text and exit
'''

DEPENDENCIES = [
    "build-essential",
    "libevdev2",
    "libevdev-dev",
]

def cleanup():
    pass

def run_command(cmd=""):
    import subprocess
    p = subprocess.Popen(
        cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    result = p.stdout.read().decode('utf-8')
    status = p.poll()
    return status, result

def colored(text, color):
    color = color.lower()
    colors = {
        "grey":   f"\033[1;30m{text}\033[0m",
        "red":    f"\033[1;31m{text}\033[0m",
        "green":  f"\033[1;32m{text}\033[0m",
        "yellow": f"\033[1;33m{text}\033[0m",
        "blue":   f"\033[1;34m{text}\033[0m",
        "purple": f"\033[1;35m{text}\033[0m",
        "cyan":   f"\033[1;36m{text}\033[0m",
        "white":  f"\033[1;37m{text}\033[0m",
    }
    return colors[color]

def do(msg="", cmd=""):
    print(f"[    ] {msg}...", end='', flush=True)
    status, result = eval(cmd)
    # print(status, result)
    if status == 0 or status == None or result == "":
        print(f'\r[ {colored("OK", "green")} ]')
        return True
    else:
        print(f'\r[{colored("Fail", "red")}]')
        errors.append(f"{msg} error:\n  Status: {status}\n  Error: {result}")
        return False

def check_sudo():
    if os.geteuid() != 0:
        sys.exit("You need root permissions to do this!")

def install():
    options = []
    if len(sys.argv) > 1:
        options = sys.argv[1:]
        for o in options:
            if o not in avaiable_options:
                print("Option {} is not found.".format(o))
                print(usage)
                quit()
    if "-h" in options or "--help" in options:
        print(usage)
        quit()
    print("Evdev Right Click Emulation installation starts")

    do(msg="Update apt",
        cmd='run_command("apt update")')
    dep = " ".join(DEPENDENCIES)
    do(msg="Install dependencies",
        cmd=f'run_command("apt install {dep} -y")')


    print("Install RasPad Launcher")
    do(msg="Make binary",
        cmd='run_command("make all")')
    do(msg="Copy binary to system",
        cmd='run_command("cp out/evdev-rce /usr/local/bin/")')
    do(msg="Make binary excutable",
        cmd='run_command("chmod +x /usr/local/bin/evdev-rce")')
    do(msg="Copy desktop for autostart",
        cmd=f'run_command("cp evdev-rce.desktop {AUTOSTART_DIR}")')

    if len(errors) == 0:
        print("Finished")
        if "--no-reboot" not in options:
            select = input("Installation needs to reboot. Do you want to reboot right now? (y/N): ")
            if select.lower() == "y":
                print("Reboot!")
                time.sleep(1)
                run_command("reboot")
            else:
                print("Canceled")
    else:
        print("\n\nError happened in install process:")
        for error in errors:
            print(error)
        print("Try to fix it yourself, or contact service@sunfounder.com with this message")
        sys.exit(1)

if __name__ == "__main__":
    check_sudo()
    try:
        install()
    except KeyboardInterrupt:
        print("Canceled.")
    finally:
        cleanup()
